#!/usr/bin/env python3
"""
Test avanzado para verificar el algoritmo DFS con recursos complejos
"""

import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', 'src'))

from drawio_export import generate_drawio_file

def test_complex_resource_tree():
    """Test del algoritmo DFS con recursos complejos y m√∫ltiples niveles"""
    
    # Datos de prueba con estructura compleja real de Azure
    test_items = [
        # Nivel 0: Management Groups (jerarqu√≠a de 3 niveles)
        {
            'id': '/providers/Microsoft.Management/managementGroups/tenant-root',
            'name': 'Tenant Root',
            'type': 'Microsoft.Management/managementGroups'
        },
        {
            'id': '/providers/Microsoft.Management/managementGroups/contoso-root',
            'name': 'Contoso Root',
            'type': 'Microsoft.Management/managementGroups'
        },
        {
            'id': '/providers/Microsoft.Management/managementGroups/contoso-platform',
            'name': 'Platform',
            'type': 'Microsoft.Management/managementGroups'
        },
        
        # Nivel 1: Suscripciones
        {
            'id': '/subscriptions/sub-prod-001',
            'name': 'Production Subscription',
            'type': 'Microsoft.Resources/subscriptions'
        },
        {
            'id': '/subscriptions/sub-dev-001', 
            'name': 'Development Subscription',
            'type': 'Microsoft.Resources/subscriptions'
        },
        
        # Nivel 2: Resource Groups
        {
            'id': '/subscriptions/sub-prod-001/resourceGroups/rg-network',
            'name': 'rg-network',
            'type': 'Microsoft.Resources/subscriptions/resourceGroups'
        },
        {
            'id': '/subscriptions/sub-prod-001/resourceGroups/rg-compute',
            'name': 'rg-compute', 
            'type': 'Microsoft.Resources/subscriptions/resourceGroups'
        },
        {
            'id': '/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps',
            'name': 'rg-dev-apps',
            'type': 'Microsoft.Resources/subscriptions/resourceGroups'
        },
        
        # Nivel 3: Recursos de red
        {
            'id': '/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub',
            'name': 'vnet-hub',
            'type': 'Microsoft.Network/virtualNetworks'
        },
        {
            'id': '/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/subnet-web',
            'name': 'subnet-web',
            'type': 'Microsoft.Network/virtualNetworks/subnets'
        },
        {
            'id': '/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/subnet-db',
            'name': 'subnet-db',
            'type': 'Microsoft.Network/virtualNetworks/subnets'
        },
        {
            'id': '/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/networkSecurityGroups/nsg-web',
            'name': 'nsg-web',
            'type': 'Microsoft.Network/networkSecurityGroups'
        },
        
        # Nivel 3: Recursos de compute
        {
            'id': '/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Compute/virtualMachines/vm-web-01',
            'name': 'vm-web-01',
            'type': 'Microsoft.Compute/virtualMachines'
        },
        {
            'id': '/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Compute/disks/vm-web-01-osdisk',
            'name': 'vm-web-01-osdisk',
            'type': 'Microsoft.Compute/disks'
        },
        {
            'id': '/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Network/networkInterfaces/vm-web-01-nic',
            'name': 'vm-web-01-nic',
            'type': 'Microsoft.Network/networkInterfaces'
        },
        
        # Nivel 3: Recursos de dev
        {
            'id': '/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps/providers/Microsoft.Web/sites/app-dev-api',
            'name': 'app-dev-api',
            'type': 'Microsoft.Web/sites'
        },
        {
            'id': '/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps/providers/Microsoft.Storage/storageAccounts/stdevapi001',
            'name': 'stdevapi001',
            'type': 'Microsoft.Storage/storageAccounts'
        }
    ]
    
    # Dependencias jer√°rquicas (estructurales) y de relaci√≥n
    test_dependencies = [
        # === DEPENDENCIAS JER√ÅRQUICAS (para el √°rbol) ===
        
        # Management Groups jerarqu√≠a
        ('/providers/Microsoft.Management/managementGroups/contoso-root', 
         '/providers/Microsoft.Management/managementGroups/tenant-root'),
        ('/providers/Microsoft.Management/managementGroups/contoso-platform', 
         '/providers/Microsoft.Management/managementGroups/contoso-root'),
        
        # Suscripciones ‚Üí Management Groups
        ('/subscriptions/sub-prod-001', '/providers/Microsoft.Management/managementGroups/contoso-platform'),
        ('/subscriptions/sub-dev-001', '/providers/Microsoft.Management/managementGroups/contoso-platform'),
        
        # Resource Groups ‚Üí Suscripciones
        ('/subscriptions/sub-prod-001/resourceGroups/rg-network', '/subscriptions/sub-prod-001'),
        ('/subscriptions/sub-prod-001/resourceGroups/rg-compute', '/subscriptions/sub-prod-001'),
        ('/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps', '/subscriptions/sub-dev-001'),
        
        # Recursos ‚Üí Resource Groups
        ('/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub',
         '/subscriptions/sub-prod-001/resourceGroups/rg-network'),
        ('/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/networkSecurityGroups/nsg-web',
         '/subscriptions/sub-prod-001/resourceGroups/rg-network'),
        ('/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Compute/virtualMachines/vm-web-01',
         '/subscriptions/sub-prod-001/resourceGroups/rg-compute'),
        ('/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Compute/disks/vm-web-01-osdisk',
         '/subscriptions/sub-prod-001/resourceGroups/rg-compute'),
        ('/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Network/networkInterfaces/vm-web-01-nic',
         '/subscriptions/sub-prod-001/resourceGroups/rg-compute'),
        ('/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps/providers/Microsoft.Web/sites/app-dev-api',
         '/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps'),
        ('/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps/providers/Microsoft.Storage/storageAccounts/stdevapi001',
         '/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps'),
        
        # === DEPENDENCIAS DE RELACI√ìN (l√≠neas punteadas) ===
        
        # Subnets ‚Üí VNet (relaci√≥n padre-hijo especial)
        ('/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/subnet-web',
         '/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub'),
        ('/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/subnet-db',
         '/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub'),
        
        # VM ‚Üí Disk (relaci√≥n de uso)
        ('/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Compute/disks/vm-web-01-osdisk',
         '/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Compute/virtualMachines/vm-web-01'),
        
        # NIC ‚Üí Subnet (relaci√≥n de red)
        ('/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Network/networkInterfaces/vm-web-01-nic',
         '/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/subnet-web'),
        
        # VM ‚Üí NIC (relaci√≥n de uso)
        ('/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Network/networkInterfaces/vm-web-01-nic',
         '/subscriptions/sub-prod-001/resourceGroups/rg-compute/providers/Microsoft.Compute/virtualMachines/vm-web-01'),
        
        # NSG ‚Üí Subnet (relaci√≥n de seguridad)
        ('/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/networkSecurityGroups/nsg-web',
         '/subscriptions/sub-prod-001/resourceGroups/rg-network/providers/Microsoft.Network/virtualNetworks/vnet-hub/subnets/subnet-web'),
        
        # App Service ‚Üí Storage (relaci√≥n de dependencia)
        ('/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps/providers/Microsoft.Storage/storageAccounts/stdevapi001',
         '/subscriptions/sub-dev-001/resourceGroups/rg-dev-apps/providers/Microsoft.Web/sites/app-dev-api'),
    ]
    
    print("üß™ Probando √°rbol DFS con recursos complejos...")
    print(f"üìä Elementos: {len(test_items)} recursos")
    print(f"üîó Dependencias: {len(test_dependencies)} relaciones")
    
    content = generate_drawio_file(
        test_items, 
        test_dependencies, 
        embed_data=False,
        include_ids=None,
        diagram_mode='infrastructure'
    )
    
    # Verificaciones espec√≠ficas de estructura compleja
    assert content is not None, "No se gener√≥ contenido"
    assert len(content) > 2000, "El contenido es demasiado corto para una estructura compleja"
    
    # Verificar jerarqu√≠a de Management Groups
    assert 'Tenant Root' in content, "No se encontr√≥ el MG ra√≠z"
    assert 'Contoso Root' in content, "No se encontr√≥ el MG intermedio"
    assert 'Platform' in content, "No se encontr√≥ el MG hoja"
    
    # Verificar m√∫ltiples suscripciones
    assert 'Production Subscription' in content, "No se encontr√≥ suscripci√≥n de producci√≥n"
    assert 'Development Subscription' in content, "No se encontr√≥ suscripci√≥n de desarrollo"
    
    # Verificar m√∫ltiples Resource Groups
    assert 'rg-network' in content, "No se encontr√≥ RG de red"
    assert 'rg-compute' in content, "No se encontr√≥ RG de compute"
    assert 'rg-dev-apps' in content, "No se encontr√≥ RG de dev"
    
    # Verificar recursos especializados
    assert 'vnet-hub' in content, "No se encontr√≥ VNet"
    assert 'subnet-web' in content, "No se encontr√≥ subnet"
    assert 'vm-web-01' in content, "No se encontr√≥ VM"
    assert 'vm-web-01-osdisk' in content, "No se encontr√≥ disco"
    assert 'vm-web-01-nic' in content, "No se encontr√≥ NIC"
    assert 'nsg-web' in content, "No se encontr√≥ NSG"
    assert 'app-dev-api' in content, "No se encontr√≥ App Service"
    assert 'stdevapi001' in content, "No se encontr√≥ Storage Account"
    
    # Verificar tipos de l√≠neas
    assert 'strokeColor=#1976d2;strokeWidth=2;' in content, "No se encontraron l√≠neas jer√°rquicas"
    assert 'dashed=1;' in content, "No se encontraron l√≠neas de relaci√≥n"
    
    # Guardar archivo de prueba
    output_file = 'test-complex-tree-hierarchy.drawio'
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"‚úÖ Test de recursos complejos completado")
    print(f"üìÅ Archivo generado: {output_file}")
    print("üå≥ Estructura de √°rbol generada:")
    print("   üìä Tenant Root (nivel 0)")
    print("   ‚îú‚îÄ‚îÄ üìä Contoso Root (nivel 1)")
    print("   ‚îÇ   ‚îî‚îÄ‚îÄ üìä Platform (nivel 2)")
    print("   ‚îÇ       ‚îú‚îÄ‚îÄ üìã Production Sub (nivel 3)")
    print("   ‚îÇ       ‚îÇ   ‚îú‚îÄ‚îÄ üìÅ rg-network (nivel 4)")
    print("   ‚îÇ       ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üåê vnet-hub (nivel 5)")
    print("   ‚îÇ       ‚îÇ   ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ üîó subnet-web (relaci√≥n)")
    print("   ‚îÇ       ‚îÇ   ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ üîó subnet-db (relaci√≥n)")
    print("   ‚îÇ       ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ üõ°Ô∏è nsg-web (nivel 5)")
    print("   ‚îÇ       ‚îÇ   ‚îî‚îÄ‚îÄ üìÅ rg-compute (nivel 4)")
    print("   ‚îÇ       ‚îÇ       ‚îú‚îÄ‚îÄ üíª vm-web-01 (nivel 5)")
    print("   ‚îÇ       ‚îÇ       ‚îú‚îÄ‚îÄ üíæ vm-web-01-osdisk (nivel 5)")
    print("   ‚îÇ       ‚îÇ       ‚îî‚îÄ‚îÄ üîå vm-web-01-nic (nivel 5)")
    print("   ‚îÇ       ‚îî‚îÄ‚îÄ üìã Development Sub (nivel 3)")
    print("   ‚îÇ           ‚îî‚îÄ‚îÄ üìÅ rg-dev-apps (nivel 4)")
    print("   ‚îÇ               ‚îú‚îÄ‚îÄ üåê app-dev-api (nivel 5)")
    print("   ‚îÇ               ‚îî‚îÄ‚îÄ üíæ stdevapi001 (nivel 5)")
    print("   üìä Conexiones:")
    print("   ‚îú‚îÄ‚îÄ ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ (azul s√≥lido): Jerarqu√≠a estructural")
    print("   ‚îî‚îÄ‚îÄ ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ‚îÖ (gris punteado): Relaciones de uso/dependencia")

if __name__ == "__main__":
    test_complex_resource_tree()
    print("\nüéâ Test de recursos complejos completado exitosamente!")
    print("\nüöÄ Mejoras del algoritmo DFS:")
    print("   ‚úÖ Manejo de jerarqu√≠as MG multinivel")
    print("   ‚úÖ M√∫ltiples suscripciones y RGs")
    print("   ‚úÖ Recursos especializados (VNet, Subnet, VM, Disk, NIC, NSG)")
    print("   ‚úÖ Separaci√≥n clara: jerarqu√≠a vs relaciones")
    print("   ‚úÖ Layout balanceado autom√°tico")
    print("   ‚úÖ Escalabilidad para estructuras complejas")
